blueprint:
  name: Turn Lights On When I Arrive Home
  description: Turn the selected lights on for duration x when someone arrives home
  domain: automation
  input:
    duration:
      name: Duration
      description: The duration to keep the lights on for when someone arrives home
      selector:
        duration:
          enable_day: false
    lights:
      name: Lights
      description: Lights to turn off when timer expires.
      selector:
        target:
          entity:
            domain: light
    persons:
      name: Persons
      description: Persons to trigger the automation for when they arrive home
      selector:
        entity:
          domain: person
    gating_sensor:
      name: Gating Sensor
      description: This is the binary sensor to use to determine if lux level triggering should currently be being performed.
      selector:
        entity:
          domain: binary_sensor
          multiple: false
    timer:
      name: Timer
      description: The timer to turn the lights off when finished.
      selector:
        entity:
          multiple: false
          domain: timer
variables:
  duration: !input duration
  timer: !input timer
trigger:
  - platform: state
    entity_id: !input persons
    to: home
condition:
  - condition: state
    entity_id: !input gating_sensor
    state: 'on'
action:
  - service: light.turn_on
    data: {}
    target: !input lights
  - choose:
    - conditions:
      - condition: and
        conditions:
          - condition: state
            entity_id: !input timer
            state: active
          - condition: template
            value_template: >
              {{ as_datetime(state_attr(timer, 'finishes_at')) < (now() + timedelta(hours=duration.hours, minutes=duration.minutes, seconds=duration.seconds)) }}
      sequence:
        - service: timer.start
          data:
            duration: !input duration
          entity_id: !input timer
    - conditions:
      - condition: or
        conditions:
          - condition: state
            entity_id: !input timer
            state: idle
          - condition: state
            entity_id: !input timer
            state: paused
      sequence:
        - service: timer.start
          data:
            duration: !input duration
          entity_id: !input timer
